## base-web
server:
  port: ${DEMO1_HTTP_PORT:9090}
  shutdown: graceful


## springframework
spring:
  application:
    name: ${DEMO1_SERVICE_NAME:${serviceName}}
  ## use config-center properties
  config:
    import: optional:consul:${CONSUL_HOST:127.0.0.1}:${CONSUL_PORT:8500}
  ## cloud
  cloud:
    consul:
      host: ${CONSUL_HOST:127.0.0.1}
      port: ${CONSUL_PORT:8500}
      config:
        enabled: true
        format: yaml
        data-key: data
        prefixes: config
      discovery:
        prefer-ip-address: true
        instance-id: ${DEMO1_INSTANCE_LOCAL:demo1}
  ## data sources
  datasource:
    default:
      username: ${OPERATOR_JDBC_USERNAME:postgres}
      password: ${OPERATOR_JDBC_PASSWORD:123456}
      driver-class-name: org.postgresql.Driver
      url: ${OPERATOR_JDBC_URL:jdbc:postgresql://localhost:5432/balance}
    other:
      username: ${OPERATOR_JDBC_USERNAME:postgres}
      password: ${OPERATOR_JDBC_PASSWORD:123456}
      driver-class-name: org.postgresql.Driver
      url: ${OPERATOR_JDBC_URL:jdbc:postgresql://localhost:5432/balance}
  main:
    allow-bean-definition-overriding: true
  ## redis
  redis:
    host: 127.0.0.1
    port: 6379
    database: 0
    password: 123456
## log
logging:
  level:
    root: info
    com.hy.userauth: debug
  file:
    path: /root/logs
    name: user-auth.log

## mybatis
mybatis:
  mapper-locations: classpath:mapper/*.xml
  base-package: ${context.packageName}.dao.mapper

## actuator
management:
  server:
    port: ${DEMO1_MANAGE_PORT:9091}
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - shutdown
          - metrics
          - health