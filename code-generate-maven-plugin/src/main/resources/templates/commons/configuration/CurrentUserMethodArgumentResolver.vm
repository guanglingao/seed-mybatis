package ${context.packageName}.configuration;

import lombok.extern.slf4j.Slf4j;
import org.springframework.core.MethodParameter;
import org.springframework.web.bind.support.WebDataBinderFactory;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.method.support.HandlerMethodArgumentResolver;
import org.springframework.web.method.support.ModelAndViewContainer;

import javax.servlet.http.HttpServletRequest;


@Slf4j
public class CurrentUserMethodArgumentResolver implements HandlerMethodArgumentResolver {



    private CurrentUserAttachService currentUserAttachService;


    public CurrentUserMethodArgumentResolver(CurrentUserAttachService currentUserAttachService){
        this.currentUserAttachService = currentUserAttachService;
    }



    @Override
    public boolean supportsParameter(MethodParameter parameter) {
        return parameter.hasParameterAnnotation(CurrentUser.class);
    }

    @Override
    public Object resolveArgument(MethodParameter parameter, ModelAndViewContainer mavContainer, NativeWebRequest webRequest, WebDataBinderFactory binderFactory) throws Exception {
        if(currentUserAttachService==null){
            log.error("未找到接口[${context.packageName}.configuration.CurrentUserAttachService]的实现类");
            return null;
        }

        HttpServletRequest nativeRequest = webRequest.getNativeRequest(HttpServletRequest.class);
        if(nativeRequest == null){
            return null;
        }
        Object user = currentUserAttachService.getCurrentUserByRequest(nativeRequest);
        return user;
    }
}
